{"version":3,"sources":["logo.svg","components/Business/Business.js","components/BusinessList/BusinessList.js","components/SearchBar/SearchBar.js","util/Yelp.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Business","react_default","a","createElement","className","src","this","props","business","imageSrc","alt","name","address","city","zipCode","category","rating","reviewCount","React","Component","BusinessList","businesses","map","components_Business_Business","key","id","sortByOptions","Best Match","Highest Rated","Most Reviewed","SearchBar","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","term","location","sortBy","handleTermChange","bind","assertThisInitialized","handleLocationChange","handleSearch","_this2","keys","sortByOption","sortByOptionValue","onClick","handleSortByChange","getSortByClass","setState","e","target","value","searchYelp","preventDefault","renderSortByOptions","placeholder","onChange","Yelp","search","fetch","concat","headers","Authorization","then","response","json","jsonResponse","image_url","address1","zipcode","categories","title","review_count","App","errorMessage","busArray","console","log","components_SearchBar_SearchBar","components_BusinessList_BusinessList","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"0IAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,oOC8BzBC,4MAvBX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKE,IAAKC,KAAKC,MAAMC,SAASC,SAAUC,IAAI,MAE9CT,EAAAC,EAAAC,cAAA,UAAKG,KAAKC,MAAMC,SAASG,MACzBV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,SAAIG,KAAKC,MAAMC,SAASI,SACxBX,EAAAC,EAAAC,cAAA,SAAIG,KAAKC,MAAMC,SAASK,MACxBZ,EAAAC,EAAAC,cAAA,SAAIG,KAAKC,MAAMC,SAASM,UAEzBb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACdH,EAAAC,EAAAC,cAAA,UAAKG,KAAKC,MAAMC,SAASO,UACzBd,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UAAUE,KAAKC,MAAMC,SAASQ,QAC5Cf,EAAAC,EAAAC,cAAA,SAAIG,KAAKC,MAAMC,SAASS,uBAjBbC,IAAMC,YCadC,mLAXb,OACEnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAEXE,KAAKC,MAAMc,WAAWC,IAAI,SAAAd,GACxB,OAAOP,EAAAC,EAAAC,cAACoB,EAAD,CAAUC,IAAKhB,EAASiB,GAAIjB,SAAUA,cAN5BU,IAAMC,WCD3BO,SAAe,CACnBC,aAAe,aACfC,gBAAiB,SACjBC,gBAAiB,iBA2EJC,cAtEb,SAAAA,EAAYvB,GAAM,IAAAwB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA1B,KAAAwB,IAChBC,EAAAC,OAAAE,EAAA,EAAAF,CAAA1B,KAAA0B,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAA9B,KAAMC,KACD8B,MAAM,CACTC,KAAO,GACPC,SAAS,GACTC,OAAQ,cAEVT,EAAKU,iBAAmBV,EAAKU,iBAAiBC,KAAtBV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAD,KACxBA,EAAKa,qBAAsBb,EAAKa,qBAAqBF,KAA1BV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAD,KAC3BA,EAAKc,aAAad,EAAKc,aAAaH,KAAlBV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAD,KATFA,qFAWG,IAAAe,EAAAxC,KACnB,OAAO0B,OAAOe,KAAKrB,GAAeJ,IAAI,SAAA0B,GACpC,IAAIC,EAAoBvB,EAAcsB,GACtC,OAAO/C,EAAAC,EAAAC,cAAA,MAAI+C,QAASJ,EAAKK,mBAAmBT,KAAKI,EAAMG,GAAoB7C,UAAW0C,EAAKM,eAAeH,GAAoBzB,IAAKyB,GAAoBD,4CAI5IA,GACb,OAAI1C,KAAK+B,MAAMG,SAAWQ,EACjB,SAEA,8CAIQA,GACjB1C,KAAK+C,SAAS,CACZb,OAASQ,6CAKIM,GACfhD,KAAK+C,SAAS,CACVf,KAAMgB,EAAEC,OAAOC,qDAIAF,GACnBhD,KAAK+C,SAAS,CACVd,SAAUe,EAAEC,OAAOC,6CAIdF,GACXhD,KAAKC,MAAMkD,WAAWnD,KAAK+B,MAAMC,KAAMhC,KAAK+B,MAAME,SAAUjC,KAAK+B,MAAMG,QACvEc,EAAEI,kDAIA,OACEzD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACbH,EAAAC,EAAAC,cAAA,UACGG,KAAKqD,wBAGb1D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACdH,EAAAC,EAAAC,cAAA,SAAOyD,YAAY,oBAAoBC,SAAUvD,KAAKmC,mBACtDxC,EAAAC,EAAAC,cAAA,SAAOyD,YAAY,SAASC,SAAUvD,KAAKsC,wBAE5C3C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACdH,EAAAC,EAAAC,cAAA,KAAG+C,QAAS5C,KAAKuC,cAAjB,qBAhEkB3B,IAAMC,WCyBf2C,EAhCF,CACXC,OADW,SACJzB,EAAKC,EAAUC,GACpB,OAAOwB,MAAK,sFAAAC,OAAuF3B,EAAvF,cAAA2B,OAAwG1B,EAAxG,aAAA0B,OAA4HzB,GACtI,CACE0B,QAAU,CACRC,cAAa,UAAAF,OATT,uIAWLG,KAAM,SAAAC,GACL,OAAOA,EAASC,SACjBF,KAAM,SAAAG,GACL,GAAIA,EAAalD,WACjB,OAAOkD,EAAalD,WAAWC,IAAK,SAAAd,GAC9B,MAAO,CACLiB,GAAIjB,EAASiB,GACbhB,SAAUD,EAASgE,UACnB7D,KAAMH,EAASG,KACfC,QAASJ,EAAS+B,SAASkC,SAC3B5D,KAAML,EAAS+B,SAAS1B,KACxBwB,MAAO7B,EAAS+B,SAASF,MACzBvB,QAASN,EAAS+B,SAASmC,QAC3B3D,SAAUP,EAASmE,WAAWC,MAC9B5D,OAAQR,EAASQ,OACjBC,YAAaT,EAASqE,oBC0BzBC,cA1Cb,SAAAA,EAAYvE,GAAM,IAAAwB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA1B,KAAAwE,IAChB/C,EAAAC,OAAAE,EAAA,EAAAF,CAAA1B,KAAA0B,OAAAG,EAAA,EAAAH,CAAA8C,GAAA1C,KAAA9B,KAAMC,KACD8B,MAAO,CACVhB,WAAY,GACZ0D,aAAc,IAEhBhD,EAAK0B,WAAW1B,EAAK0B,WAAWf,KAAhBV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAD,KAChBA,EAAKgD,aAAahD,EAAKgD,aAAarC,KAAlBV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAD,KAPFA,0EASPO,EAAKC,EAASC,GAAO,IAAAM,EAAAxC,KAC9BwD,EAAKC,OAAOzB,EAAMC,EAAUC,GAAQ4B,KAAM,SAAAY,GACvCC,QAAQC,IAAIF,GACW,qBAAZA,EACRlC,EAAKiC,eAEPjC,EAAKO,SAAS,CACZhC,WAAY2D,6CAQlB1E,KAAK+C,SAAS,CACZ0B,aAAc,4EAMhB,OACE9E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAACgF,EAAD,CAAW1B,WAAYnD,KAAKmD,aAC5BxD,EAAAC,EAAAC,cAACiF,EAAD,CAAc/D,WAAYf,KAAK+B,MAAMhB,aACrCpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASE,KAAK+B,MAAM0C,sBArCzB5D,aCGEkE,QACW,cAA7BC,OAAO/C,SAASgD,UAEe,UAA7BD,OAAO/C,SAASgD,UAEhBD,OAAO/C,SAASgD,SAASC,MACvB,2DCZNC,IAASC,OAAOzF,EAAAC,EAAAC,cAACwF,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM5B,KAAK,SAAA6B,GACjCA,EAAaC","file":"static/js/main.96b3afc0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport './Business.css';\r\n\r\n\r\nclass Business extends React.Component{\r\n  render(){\r\n    return (\r\n      <div className=\"Business\">\r\n        <div className=\"image-container\">\r\n          <img src={this.props.business.imageSrc} alt=''/>\r\n        </div>\r\n        <h2>{this.props.business.name}</h2>\r\n        <div className=\"Business-information\">\r\n          <div className=\"Business-address\">\r\n            <p>{this.props.business.address}</p>\r\n            <p>{this.props.business.city}</p>\r\n            <p>{this.props.business.zipCode}</p>\r\n           </div>\r\n           <div className=\"Business-reviews\">\r\n            <h3>{this.props.business.category}</h3>\r\n            <h3 className=\"rating\">{this.props.business.rating}</h3>\r\n            <p>{this.props.business.reviewCount}</p>\r\n            </div>\r\n      </div>\r\n</div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Business;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./BusinessList.css\";\r\nimport Business from \"../Business/Business\";\r\n\r\nclass BusinessList extends React.Component {\r\n  render(){\r\n  return (\r\n    <div className=\"BusinessList\">\r\n      {\r\n        this.props.businesses.map(business=>{\r\n          return <Business key={business.id} business={business}/>;\r\n        })\r\n      }\r\n</div>)\r\n}\r\n}\r\n\r\nexport default BusinessList;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./SearchBar.css\"\r\n\r\nconst sortByOptions ={\r\n  \"Best Match\" : \"best_match\",\r\n  \"Highest Rated\": \"rating\",\r\n  \"Most Reviewed\": \"review_count\"\r\n}\r\n\r\n\r\nclass SearchBar extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      term : '',\r\n      location:'',\r\n      sortBy: 'best_match'\r\n    };\r\n    this.handleTermChange = this.handleTermChange.bind(this);\r\n    this.handleLocationChange= this.handleLocationChange.bind(this);\r\n    this.handleSearch=this.handleSearch.bind(this);\r\n  }\r\n  renderSortByOptions(){\r\n    return Object.keys(sortByOptions).map(sortByOption=>{\r\n      let sortByOptionValue = sortByOptions[sortByOption];\r\n      return <li onClick={this.handleSortByChange.bind(this, sortByOptionValue)} className={this.getSortByClass(sortByOptionValue)} key={sortByOptionValue}>{sortByOption}</li>\r\n    })\r\n  }\r\n\r\n  getSortByClass(sortByOption){\r\n    if (this.state.sortBy === sortByOption){\r\n      return \"active\";\r\n    }else {\r\n      return \"\";\r\n    }\r\n  }\r\n\r\n  handleSortByChange(sortByOption){\r\n    this.setState({\r\n      sortBy : sortByOption\r\n    }\r\n    )\r\n  }\r\n\r\n  handleTermChange(e){\r\n    this.setState({\r\n        term: e.target.value\r\n    })\r\n  }\r\n\r\n  handleLocationChange(e){\r\n    this.setState({\r\n        location: e.target.value\r\n    })\r\n  }\r\n\r\nhandleSearch(e){\r\n  this.props.searchYelp(this.state.term, this.state.location, this.state.sortBy)\r\n  e.preventDefault();\r\n}\r\n\r\n  render(){\r\n    return(\r\n      <div className=\"SearchBar\">\r\n        <div className=\"SearchBar-sort-options\">\r\n          <ul>\r\n            {this.renderSortByOptions()}\r\n          </ul>\r\n        </div>\r\n     <div className=\"SearchBar-fields\">\r\n      <input placeholder=\"Search Businesses\" onChange={this.handleTermChange}/>\r\n      <input placeholder=\"Where?\" onChange={this.handleLocationChange} />\r\n     </div>\r\n     <div className=\"SearchBar-submit\">\r\n      <a onClick={this.handleSearch}>Let's Go</a>\r\n     </div>\r\n</div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","const apiKey= \"A-Q5CQ-2GaWedYHtkyt9pfMW6Ul7BPV-LJvJmGP_SRz78R0yUAFzLJI-QA-E07Tw9UNcZEKXTLE672Xdk85qlG4IPFk8GvEa2un5N1zjMe4ETD4XLaa_C8xZUBh8XHYx\"\r\nconst clientId= \"n5dccALGutBB01w-pXMj5Q\"\r\nlet accessToken;\r\n\r\nconst Yelp = {\r\n  search(term,location, sortBy){\r\n    return fetch(`https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`,\r\n      {\r\n        headers : {\r\n          Authorization : `Bearer ${apiKey}`,\r\n        }\r\n      }).then( response=>{\r\n          return response.json()\r\n      }).then( jsonResponse=>{\r\n          if (jsonResponse.businesses){\r\n          return jsonResponse.businesses.map( business=>{\r\n                return {\r\n                  id: business.id,\r\n                  imageSrc: business.image_url,\r\n                  name: business.name,\r\n                  address: business.location.address1,\r\n                  city: business.location.city,\r\n                  state: business.location.state,\r\n                  zipCode: business.location.zipcode,\r\n                  category: business.categories.title,\r\n                  rating: business.rating,\r\n                  reviewCount: business.review_count\r\n                }\r\n            })\r\n          }\r\n      }\r\n\r\n      )\r\n  }\r\n}\r\n\r\nexport default Yelp;\r\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport BusinessList from \"./components/BusinessList/BusinessList\"\nimport SearchBar from \"./components/SearchBar/SearchBar\"\nimport Yelp from \"./util/Yelp\"\n\n\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state ={\n      businesses: [],\n      errorMessage: \"\"\n    };\n    this.searchYelp=this.searchYelp.bind(this)\n    this.errorMessage=this.errorMessage.bind(this)\n  }\n  searchYelp(term,location,sortBy){\n    Yelp.search(term, location, sortBy).then( busArray=>{\n       console.log(busArray)\n       if (typeof(busArray)===\"undefined\"){\n          this.errorMessage()\n       }else {\n        this.setState({\n          businesses: busArray\n\n        })\n      }\n    })\n  }\n\n  errorMessage(){\n    this.setState({\n      errorMessage: \"Something went wrong, try again please\",\n    })\n\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>ravenous</h1>\n        <SearchBar searchYelp={this.searchYelp}/>\n        <BusinessList businesses={this.state.businesses}/>\n        <div className=\"error\">{this.state.errorMessage}</div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}